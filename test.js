{ res:
  ServerResponse {
    _events:
     [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    output: [],
    outputEncodings: [],
    outputCallbacks: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: 82,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    socket:
     Socket {
       connecting: false,
       _hadError: false,
       _handle: [TCP],
       _parent: null,
       _host: null,
       _readableState: [ReadableState],
       readable: true,
       _events: [Object],
       _eventsCount: 8,
       _maxListeners: undefined,
       _writableState: [WritableState],
       writable: true,
       allowHalfOpen: true,
       _sockname: null,
       _pendingData: null,
       _pendingEncoding: '',
       server: [Server],
       _server: [Server],
       timeout: 120000,
       parser: [HTTPParser],
       on: [Function: socketOnWrap],
       _paused: false,
       _httpMessage: [Circular],
       [Symbol(asyncId)]: 9,
       [Symbol(lastWriteQueueSize)]: 0,
       [Symbol(timeout)]:
        Timeout {
          _idleTimeout: 120000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 4221,
          _onTimeout: [Function: bound ],
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: false,
          [Symbol(refed)]: false,
          [Symbol(asyncId)]: 10,
          [Symbol(triggerId)]: 9 },
       [Symbol(kBytesRead)]: 0,
       [Symbol(kBytesWritten)]: 0 },
    connection:
     Socket {
       connecting: false,
       _hadError: false,
       _handle: [TCP],
       _parent: null,
       _host: null,
       _readableState: [ReadableState],
       readable: true,
       _events: [Object],
       _eventsCount: 8,
       _maxListeners: undefined,
       _writableState: [WritableState],
       writable: true,
       allowHalfOpen: true,
       _sockname: null,
       _pendingData: null,
       _pendingEncoding: '',
       server: [Server],
       _server: [Server],
       timeout: 120000,
       parser: [HTTPParser],
       on: [Function: socketOnWrap],
       _paused: false,
       _httpMessage: [Circular],
       [Symbol(asyncId)]: 9,
       [Symbol(lastWriteQueueSize)]: 0,
       [Symbol(timeout)]:
        Timeout {
          _idleTimeout: 120000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 4221,
          _onTimeout: [Function: bound ],
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: false,
          [Symbol(refed)]: false,
          [Symbol(asyncId)]: 10,
          [Symbol(triggerId)]: 9 },
       [Symbol(kBytesRead)]: 0,
       [Symbol(kBytesWritten)]: 0 },
    _header:
     'HTTP/1.1 200 OK\r\nX-Powered-By: Express\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 82\r\nETag: W/"52-ugT7deXMOaeqIpG+2smmRqjTxew"\r\nDate: Wed, 09 Jan2019 00:46:19 GMT\r\nConnection: keep-alive\r\n\r\n',
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req:
     IncomingMessage {
       _readableState: [ReadableState],
       readable: true,
       _events: [Object: null prototype] {},
       _eventsCount: 0,
       _maxListeners: undefined,
       socket: [Socket],
       connection: [Socket],
       httpVersionMajor: 1,
       httpVersionMinor: 1,
       httpVersion: '1.1',
       complete: false,
       headers: [Object],
       rawHeaders: [Array],
       trailers: {},
       rawTrailers: [],
       aborted: false,
       upgrade: false,
       url: '/posts/1/',
       method: 'DELETE',
       statusCode: null,
       statusMessage: null,
       client: [Socket],
       _consuming: false,
       _dumped: false,
       next: [Function: next],
       baseUrl: '',
       originalUrl: '/posts/1/',
       _parsedUrl: [Url],
       params: [Object],
       query: {},
       res: [Circular],
       body: {},
       route: [Route] },
    locals: [Object: null prototype] {},
    statusMessage: 'OK',
    statusCode: 200,
    [Symbol(isCorked)]: false,
    [Symbol(outHeadersKey)]:
     [Object: null prototype] {
       'x-powered-by': [Array],
       'content-type': [Array],
       'content-length': [Array],
       etag: [Array] } } }